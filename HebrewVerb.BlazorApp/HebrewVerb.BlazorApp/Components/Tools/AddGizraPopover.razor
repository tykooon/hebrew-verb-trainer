@using HebrewVerb.Application.Feature.Gizras.Commands
@inject ISnackbar snackbar
@inject IMediator mediator

@rendermode InteractiveAuto

<MudPopover Open="IsOpen" Fixed="true" Style="width:400px" Class="pa-4"
    AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
        <div class="d-flex flex-column">
            <MudGrid Justify="Justify.FlexEnd">
                <MudIconButton Icon="@Icons.Material.Filled.Close" Variant="Variant.Text" Color="Color.Dark" Size="Size.Medium" OnClick="Close" />
            </MudGrid>
        <MudText>Add new Gizra data</MudText>
        <MudInput @bind-Value="@_addGizraName" Placeholder="input name of Gizra here" Label="Gizra Name"></MudInput>
        <MudInput @bind-Value="@_addGizraDescription" Placeholder="input short description of Gizra here" Label="Gizra Description"></MudInput>
        <BinyanFilter @bind-Options="@_addGizraBinyans"></BinyanFilter>
        <MudButton OnClick="@AddNewGizra" Variant="Variant.Filled" Class="ml-auto mr-2 my-2" Color="Color.Primary">Load</MudButton>
        </div>
</MudPopover>

@code {
    [Parameter]
    public bool IsOpen { get; set; }

    [Parameter]
    public EventCallback<bool> IsOpenChanged { get; set; }

    [Parameter]
    public EventCallback<RefreshOption> NewGizraCreated { get; set; }

    private async Task Close()
    {
        IsOpen = false;
        await IsOpenChanged.InvokeAsync(IsOpen);
    }

    private string _addGizraName = "";
    private string _addGizraDescription = "";
    private IEnumerable<Binyan> _addGizraBinyans = [];

    public async Task AddNewGizra()
    {
        var command = new AddNewGizraCommand(_addGizraName, _addGizraDescription, _addGizraBinyans.Select(b => b.Name));
        var addRes = await mediator.Send(command);

        if (!addRes.IsSuccess)
        {
            snackbar.Add("Error with adding gizra to database", Severity.Error);
            return;
        }
        snackbar.Add("Successfully added", Severity.Success);
        await NewGizraCreated.InvokeAsync();
    }
}
