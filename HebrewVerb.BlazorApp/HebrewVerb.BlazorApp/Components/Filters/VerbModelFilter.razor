@using HebrewVerb.Application.Models
@using HebrewVerb.Application.Services
@rendermode InteractiveServer

<MudSelect T="VerbModel" AnchorOrigin="Origin.BottomCenter" MultiSelection="true" ToStringFunc="@((g) => g.NameHebrew)"
           SelectedValuesChanged="OptionsChanged" SelectedValues="Options" Label="Модель:">
    @foreach (var verbModel in VerbModelList)
    {
        <MudSelectItem T="VerbModel" Value="@verbModel">
            <div style="max-width:300px;" class="d-flex justify-content-between">
                <MudTooltip>
                    <ChildContent>
                        <span class="hebrew-accent">@verbModel.NameHebrew</span>
                    </ChildContent>
                    <TooltipContent>
                        <div style="max-width:180px" class="d-flex flex-wrap">
                            @verbModel.NameRussian
                        </div>
                    </TooltipContent>
                </MudTooltip>
                <VerbModelVisual VerbModel="@verbModel"></VerbModelVisual>
            </div>
        </MudSelectItem>

    }
</MudSelect>

@code {
    [Parameter]
    public IEnumerable<VerbModel> Options { get; set; } = new HashSet<VerbModel>();

    [Parameter]
    public IEnumerable<VerbModel> VerbModelList { get; set; } = [];

    [Parameter]
    public EventCallback<IEnumerable<VerbModel>> OptionsChanged { get; set; }
}
